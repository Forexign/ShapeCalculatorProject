@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView";
        settings.CallbackRouteValues = new { Controller = "RoleAdmin", Action = "GridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "RoleAdmin", Action = "GridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "RoleAdmin", Action = "GridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "RoleAdmin", Action = "GridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "RoleId";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.SettingsText.CommandEdit = "Düzenle";
        settings.SettingsText.CommandNew = "Ekle";
        settings.SettingsText.CommandDelete = "Sil";

        settings.BeforeGetCallbackResult = (sender, e) =>
        {
            MVCxGridView gridView = sender as MVCxGridView;
            gridView.SettingsText.CommandCancel = "İptal";
            if (gridView.IsNewRowEditing)
            {
                gridView.SettingsText.CommandUpdate = "Kaydet";
            }
            else
                gridView.SettingsText.CommandUpdate = "Güncelle";
        };
        settings.SettingsPager.Summary.Text = "Sayfa {0}, Toplam {1} Sayfa (Toplam: {2} Adet Veri)";


        settings.Columns.Add(column =>
        {
            column.FieldName = "RoleId";
            column.Caption = "ID";
            column.ReadOnly = true;
            column.Visible = false;
            column.EditFormSettings.Visible = DevExpress.Utils.DefaultBoolean.False;
        });

        settings.Columns.Add("RoleName", "Rol");
        settings.Columns.Add(column =>
        {
            column.FieldName = "CanCalculateDikdortgen";
            column.Caption = "Dikdortgen";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "CanCalculateKare";
            column.Caption = "Kare";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "CanCalculateDaire";
            column.Caption = "Daire";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "CanCalculateSilindir";
            column.Caption = "Silindir";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "CanCalculateKup";
            column.Caption = "Kup";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
        });
    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()